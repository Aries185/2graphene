commit 5985a7f3a0151d3be9940dffeef43b8dc8e7f2af (HEAD, tag: SQ1A.220205.002.2022020800, tag: SQ1A.220105.002.2022010500, m/master, grapheneos/12)
Author: Pratyush <codelab@pratyush.dev>
Date:   Thu 2021-08-12 00:15:25+0530

    use uid instead of app id for tracking INTERNET permission
    
    Change-Id: Ibec846480f3b440b5a323c86efa95c2fd1d81284
---
 bpf_progs/netd.c | 10 ++--------
 1 file changed, 2 insertions(+), 8 deletions(-)

diff --git a/bpf_progs/netd.c b/bpf_progs/netd.c
index e9e1477ff1e08695b54bdeb0386b1273f5ad2e0b..df60a59f8efcf5d0a5c3150fd988e54b60201506 100644
--- a/bpf_progs/netd.c
+++ b/bpf_progs/netd.c
@@ -342,28 +342,22 @@ DEFINE_BPF_PROG("skfilter/denylist/xtbpf", AID_ROOT, AID_NET_ADMIN, xt_bpf_denyl
     if (denylistMatch) return denylistMatch->rule & PENALTY_BOX_MATCH ? BPF_MATCH : BPF_NOMATCH;
     return BPF_NOMATCH;
 }
 
 DEFINE_BPF_MAP(uid_permission_map, HASH, uint32_t, uint8_t, UID_OWNER_MAP_SIZE)
 
 DEFINE_BPF_PROG_KVER("cgroupsock/inet/create", AID_ROOT, AID_ROOT, inet_socket_create,
                      KVER(4, 14, 0))
 (struct bpf_sock* sk) {
     uint64_t gid_uid = bpf_get_current_uid_gid();
-    /*
-     * A given app is guaranteed to have the same app ID in all the profiles in
-     * which it is installed, and install permission is granted to app for all
-     * user at install time so we only check the appId part of a request uid at
-     * run time. See UserHandle#isSameApp for detail.
-     */
-    uint32_t appId = (gid_uid & 0xffffffff) % PER_USER_RANGE;
-    uint8_t* permissions = bpf_uid_permission_map_lookup_elem(&appId);
+    uint32_t uid = (gid_uid & 0xffffffff);
+    uint8_t* permissions = bpf_uid_permission_map_lookup_elem(&uid);
     if (!permissions) {
         // UID not in map. Default to just INTERNET permission.
         return 1;
     }
 
     // A return value of 1 means allow, everything else means deny.
     return (*permissions & BPF_PERMISSION_INTERNET) == BPF_PERMISSION_INTERNET;
 }
 
 LICENSE("Apache 2.0");
