commit 52dd10a46ed7395ddbded55c4983b5f383af97ae
Author: Daniel Micay <danielmicay@gmail.com>
Date:   Tue 2017-02-21 02:18:13-0500

    disable location tagging by default
---
 src/com/android/camera/settings/Keys.java | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/src/com/android/camera/settings/Keys.java b/src/com/android/camera/settings/Keys.java
index 0339ea6c7a7a6cefb942be1b117e1fe98889d528..985ce814f3e454e3c18bf2ed2f8635258a75bf80 100644
--- a/src/com/android/camera/settings/Keys.java
+++ b/src/com/android/camera/settings/Keys.java
@@ -173,20 +173,24 @@ public class Keys {
 
         settingsManager.setDefaults(KEY_SHOULD_SHOW_REFOCUS_VIEWER_CLING, true);
 
         settingsManager.setDefaults(KEY_HDR_PLUS_FLASH_MODE,
             context.getString(R.string.pref_camera_hdr_plus_flashmode_default),
             context.getResources().getStringArray(
                 R.array.pref_camera_hdr_plus_flashmode_entryvalues));
 
         settingsManager.setDefaults(KEY_SHOULD_SHOW_SETTINGS_BUTTON_CLING, true);
 
+        settingsManager.setDefaults(KEY_RECORD_LOCATION, false);
+        if (!settingsManager.isSet(SettingsManager.SCOPE_GLOBAL, KEY_RECORD_LOCATION)) {
+            settingsManager.setToDefault(SettingsManager.SCOPE_GLOBAL, KEY_RECORD_LOCATION);
+        }
     }
 
     /** Helper functions for some defined keys. */
 
     /**
      * Returns whether the camera has been set to back facing in settings.
      */
     public static boolean isCameraBackFacing(SettingsManager settingsManager,
                                              String moduleScope) {
         return settingsManager.isDefault(moduleScope, KEY_CAMERA_ID);

commit 5cb4243cabad5e6d2705c24cd48d6876f4a00c86
Author: Ethan Chen <intervigil@gmail.com>
Date:   Tue 2015-11-17 14:08:43-0800

    Don't attempt to convert degree to orientation enum twice
    
    * Exif.getOrientation already calls getRotationForOrientationValues,
      which returns a degree value. Don't attempt to convert that degree
      value back into degrees, that makes no sense.
    
    Change-Id: Ie35a0683e2d36801a9130ec19e1b3aa1f48b92c2
---
 .../camera/processing/imagebackend/TaskCompressImageToJpeg.java        | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/src/com/android/camera/processing/imagebackend/TaskCompressImageToJpeg.java b/src/com/android/camera/processing/imagebackend/TaskCompressImageToJpeg.java
index c87eab8e85b78b0e3d50eec2b51bc74cb04dc230..7a2caf9fb72af52abae8b3186b2d1976434e067e 100644
--- a/src/com/android/camera/processing/imagebackend/TaskCompressImageToJpeg.java
+++ b/src/com/android/camera/processing/imagebackend/TaskCompressImageToJpeg.java
@@ -89,22 +89,21 @@ public class TaskCompressImageToJpeg extends TaskJpegEncode {
     }
 
     /**
      * Encapsulates the required EXIF Tag parse for Image processing.
      *
      * @param exif EXIF data from which to extract data.
      * @return A Minimal Map from ExifInterface.Tag value to values required for Image processing
      */
     public Map<Integer, Integer> exifGetMinimalTags(ExifInterface exif) {
         Map<Integer, Integer> map = new HashMap<>();
-        map.put(ExifInterface.TAG_ORIENTATION,
-                ExifInterface.getRotationForOrientationValue((short) Exif.getOrientation(exif)));
+        map.put(ExifInterface.TAG_ORIENTATION, Exif.getOrientation(exif));
         map.put(ExifInterface.TAG_PIXEL_X_DIMENSION, exif.getTagIntValue(
                 ExifInterface.TAG_PIXEL_X_DIMENSION));
         map.put(ExifInterface.TAG_PIXEL_Y_DIMENSION, exif.getTagIntValue(
                 ExifInterface.TAG_PIXEL_Y_DIMENSION));
         return map;
     }
 
     @Override
     public void run() {
         ImageToProcess img = mImage;

commit 465040530151ff736a406b1f82e17124e561b206
Author: Daniel Micay <danielmicay@gmail.com>
Date:   Thu 2017-08-10 20:23:39-0400

    remove no-op help and feedback button
---
 res/xml/camera_preferences.xml                              |  5 -----
 src/com/android/camera/settings/CameraSettingsActivity.java | 11 -----------
 2 files changed, 16 deletions(-)

diff --git a/res/xml/camera_preferences.xml b/res/xml/camera_preferences.xml
index 7713967427ca8c93b541986041d3ce7293c923d1..9c2a1a274ae274b93d4a2080418e3a49677408ef 100644
--- a/res/xml/camera_preferences.xml
+++ b/res/xml/camera_preferences.xml
@@ -64,16 +64,11 @@
   <PreferenceScreen
       android:key="pref_category_advanced"
       android:title="@string/pref_category_advanced" >
     <!-- Exposure Compensation -->
     <com.android.camera.settings.ManagedSwitchPreference
         android:defaultValue="false"
         android:key="pref_camera_exposure_compensation_key"
         android:title="@string/pref_camera_exposure_compensation" />
   </PreferenceScreen>
 
-  <!-- Google Help and feedback launcher -->
-  <Preference
-      android:key="pref_launch_help"
-      android:title="@string/setting_google_help_and_feedback" />
-
 </PreferenceScreen>
diff --git a/src/com/android/camera/settings/CameraSettingsActivity.java b/src/com/android/camera/settings/CameraSettingsActivity.java
index c2e060a1e2e96419fe285ea0042655e07ed3f986..479a127c2414319e20e97f734b967c570e6c6830 100644
--- a/src/com/android/camera/settings/CameraSettingsActivity.java
+++ b/src/com/android/camera/settings/CameraSettingsActivity.java
@@ -40,21 +40,20 @@ import com.android.camera.debug.Log;
 import com.android.camera.device.CameraId;
 import com.android.camera.one.OneCamera.Facing;
 import com.android.camera.one.OneCameraAccessException;
 import com.android.camera.one.OneCameraCharacteristics;
 import com.android.camera.one.OneCameraException;
 import com.android.camera.one.OneCameraManager;
 import com.android.camera.one.OneCameraModule;
 import com.android.camera.settings.PictureSizeLoader.PictureSizes;
 import com.android.camera.settings.SettingsUtil.SelectedVideoQualities;
 import com.android.camera.util.CameraSettingsActivityHelper;
-import com.android.camera.util.GoogleHelpHelper;
 import com.android.camera.util.Size;
 import com.android.camera2.R;
 import com.android.ex.camera2.portability.CameraAgentFactory;
 import com.android.ex.camera2.portability.CameraDeviceInfo;
 
 import java.text.DecimalFormat;
 import java.util.ArrayList;
 import java.util.List;
 
 /**
@@ -135,21 +134,20 @@ public class CameraSettingsActivity extends FragmentActivity {
             return true;
         }
         return true;
     }
 
     public static class CameraSettingsFragment extends PreferenceFragment implements
             OnSharedPreferenceChangeListener {
 
         public static final String PREF_CATEGORY_RESOLUTION = "pref_category_resolution";
         public static final String PREF_CATEGORY_ADVANCED = "pref_category_advanced";
-        public static final String PREF_LAUNCH_HELP = "pref_launch_help";
         private static final Log.Tag TAG = new Log.Tag("SettingsFragment");
         private static DecimalFormat sMegaPixelFormat = new DecimalFormat("##0.0");
         private String[] mCamcorderProfileNames;
         private CameraDeviceInfo mInfos;
         private String mPrefKey;
         private boolean mHideAdvancedScreen;
         private boolean mGetSubPrefAsRoot = true;
 
         // Selected resolutions for the different cameras and sizes.
         private PictureSizes mPictureSizes;
@@ -213,29 +211,20 @@ public class CameraSettingsActivity extends FragmentActivity {
             fillEntriesAndSummaries(resolutionScreen);
             setPreferenceScreenIntent(resolutionScreen);
 
             final PreferenceScreen advancedScreen =
                     (PreferenceScreen) findPreference(PREF_CATEGORY_ADVANCED);
 
             if (!mHideAdvancedScreen) {
                 setPreferenceScreenIntent(advancedScreen);
             }
 
-            Preference helpPref = findPreference(PREF_LAUNCH_HELP);
-            helpPref.setOnPreferenceClickListener(
-                    new OnPreferenceClickListener() {
-                        @Override
-                        public boolean onPreferenceClick(Preference preference) {
-                            new GoogleHelpHelper(activity).launchGoogleHelp();
-                            return true;
-                        }
-                    });
             getPreferenceScreen().getSharedPreferences()
                     .registerOnSharedPreferenceChangeListener(this);
         }
 
         /**
          * Configure home-as-up for sub-screens.
          */
         private void setPreferenceScreenIntent(final PreferenceScreen preferenceScreen) {
             Intent intent = new Intent(getActivity(), CameraSettingsActivity.class);
             intent.putExtra(PREF_SCREEN_EXTRA, preferenceScreen.getKey());

commit 92df5a8789fab6df9ded73880db1f53d87bbf75c
Author: Wang Han <416810799@qq.com>
Date:   Wed 2018-09-12 12:25:31+0800

    Camera2: Request for ACCESS_FINE_LOCATION permission
    
     * ACCESS_COARSE_LOCATION only allows to access approximate location.
    
    Change-Id: Ic512f574b32e01baa115a0a784f437c8225b85c3
---
 AndroidManifest.xml                                         | 1 -
 src/com/android/camera/CameraActivity.java                  | 2 +-
 src/com/android/camera/PermissionsActivity.java             | 4 ++--
 src/com/android/camera/app/FirstRunDialog.java              | 4 ++--
 src/com/android/camera/settings/CameraSettingsActivity.java | 4 ++--
 5 files changed, 7 insertions(+), 8 deletions(-)

diff --git a/AndroidManifest.xml b/AndroidManifest.xml
index 1f13e3e806fb00e32dcbc5fe452804a45dc90889..45e69e8ef4f129193478517abb323d57f96e2bee 100644
--- a/AndroidManifest.xml
+++ b/AndroidManifest.xml
@@ -1,21 +1,20 @@
 <?xml version="1.0" encoding="utf-8"?>
 
 <manifest
     xmlns:android="http://schemas.android.com/apk/res/android"
     package="com.android.camera2">
 
     <uses-sdk
         android:minSdkVersion="19"
         android:targetSdkVersion="28" />
 
-    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
     <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
     <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
     <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
     <uses-permission android:name="android.permission.BIND_WALLPAPER" />
     <uses-permission android:name="android.permission.CAMERA" />
     <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
     <uses-permission android:name="android.permission.INTERNET" />
     <uses-permission android:name="android.permission.NFC" />
     <uses-permission android:name="android.permission.READ_SYNC_SETTINGS" />
     <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
diff --git a/src/com/android/camera/CameraActivity.java b/src/com/android/camera/CameraActivity.java
index 18d87bf24c8f1e66bdf96281e67232c57a8dc0b8..5558f2c429858d49d2f38821330bb6535b305d4b 100644
--- a/src/com/android/camera/CameraActivity.java
+++ b/src/com/android/camera/CameraActivity.java
@@ -1932,21 +1932,21 @@ public class CameraActivity extends QuickActivity
 
         if (checkSelfPermission(Manifest.permission.CAMERA) == PackageManager.PERMISSION_GRANTED &&
                 checkSelfPermission(Manifest.permission.RECORD_AUDIO) == PackageManager.PERMISSION_GRANTED &&
                 checkSelfPermission(Manifest.permission.READ_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED) {
             mHasCriticalPermissions = true;
         } else {
             mHasCriticalPermissions = false;
         }
         if (!mHasCriticalPermissions || (mSettingsManager.getBoolean(
                 SettingsManager.SCOPE_GLOBAL, Keys.KEY_RECORD_LOCATION) &&
-                (checkSelfPermission(Manifest.permission.ACCESS_COARSE_LOCATION)
+                (checkSelfPermission(Manifest.permission.ACCESS_FINE_LOCATION)
                    != PackageManager.PERMISSION_GRANTED) &&
                 !mSettingsManager.getBoolean(SettingsManager.SCOPE_GLOBAL,
                     Keys.KEY_HAS_SEEN_PERMISSIONS_DIALOGS))) {
             // TODO: Convert PermissionsActivity into a dialog so we
             // don't lose the state of CameraActivity.
             Intent intent = new Intent(this, PermissionsActivity.class);
             startActivity(intent);
             finish();
         }
     }
diff --git a/src/com/android/camera/PermissionsActivity.java b/src/com/android/camera/PermissionsActivity.java
index aca4778e6a4d02a37ba5979f4616a85bd0d8d24d..48f262f6cf2b44cc6561562347cb5d5c3b0291ec 100644
--- a/src/com/android/camera/PermissionsActivity.java
+++ b/src/com/android/camera/PermissionsActivity.java
@@ -130,21 +130,21 @@ public class PermissionsActivity extends QuickActivity {
         if (checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE)
                 != PackageManager.PERMISSION_GRANTED) {
             mNumPermissionsToRequest++;
             mShouldRequestWriteStoragePermission = true;
         } else {
             mFlagHasWriteStoragePermission = true;
         }
 
         if (mSettingsManager.getBoolean(SettingsManager.SCOPE_GLOBAL,
             Keys.KEY_RECORD_LOCATION)
-                && (checkSelfPermission(Manifest.permission.ACCESS_COARSE_LOCATION)
+                && (checkSelfPermission(Manifest.permission.ACCESS_FINE_LOCATION)
                 != PackageManager.PERMISSION_GRANTED)) {
             mNumPermissionsToRequest++;
             mShouldRequestLocationPermission = true;
         }
 
         if (mNumPermissionsToRequest != 0) {
             if (!isKeyguardLocked() && !mSettingsManager.getBoolean(SettingsManager.SCOPE_GLOBAL,
                     Keys.KEY_HAS_SEEN_PERMISSIONS_DIALOGS)) {
                 buildPermissionsRequest();
             } else {
@@ -175,21 +175,21 @@ public class PermissionsActivity extends QuickActivity {
             permissionsToRequest[permissionsRequestIndex] = Manifest.permission.READ_EXTERNAL_STORAGE;
             mIndexPermissionRequestStorage = permissionsRequestIndex;
             permissionsRequestIndex++;
         }
         if (mShouldRequestWriteStoragePermission) {
             permissionsToRequest[permissionsRequestIndex] = Manifest.permission.WRITE_EXTERNAL_STORAGE;
             mIndexPermissionRequestWriteStorage = permissionsRequestIndex;
             permissionsRequestIndex++;
         }
         if (mShouldRequestLocationPermission) {
-            permissionsToRequest[permissionsRequestIndex] = Manifest.permission.ACCESS_COARSE_LOCATION;
+            permissionsToRequest[permissionsRequestIndex] = Manifest.permission.ACCESS_FINE_LOCATION;
             mIndexPermissionRequestLocation = permissionsRequestIndex;
         }
 
         Log.v(TAG, "requestPermissions count: " + permissionsToRequest.length);
         requestPermissions(permissionsToRequest, PERMISSION_REQUEST_CODE);
     }
 
     @Override
     public void onRequestPermissionsResult(int requestCode,
                                            String permissions[], int[] grantResults) {
diff --git a/src/com/android/camera/app/FirstRunDialog.java b/src/com/android/camera/app/FirstRunDialog.java
index 58e1fcbbaed1cb3391ccbff2480d0309534781a5..35330fa85a6f49539d349b79d2a3f550898122fc 100644
--- a/src/com/android/camera/app/FirstRunDialog.java
+++ b/src/com/android/camera/app/FirstRunDialog.java
@@ -203,25 +203,25 @@ public class FirstRunDialog {
                 dismiss();
                 mListener.onFirstRunDialogCancelled();
             }
         });
 
         // Show the dialog.
         mAspectRatioPreferenceDialog.show();
     }
 
     private void checkLocationPermission() {
-        if (mContext.checkSelfPermission(Manifest.permission.ACCESS_COARSE_LOCATION)
+        if (mContext.checkSelfPermission(Manifest.permission.ACCESS_FINE_LOCATION)
                 != PackageManager.PERMISSION_GRANTED) {
             Activity activity = (Activity) mContext;
             activity.requestPermissions(
-                new String[] {Manifest.permission.ACCESS_COARSE_LOCATION},
+                new String[] {Manifest.permission.ACCESS_FINE_LOCATION},
                 PERMISSION_REQUEST_CODE);
             mSettingsManager.set(SettingsManager.SCOPE_GLOBAL,
                 Keys.KEY_HAS_SEEN_PERMISSIONS_DIALOGS, true);
         }
     }
 
     /**
      * Prompts a dialog to allow people to choose location preference when
      * people open the app for the first time. If the preference has been set,
      * this will return false.
diff --git a/src/com/android/camera/settings/CameraSettingsActivity.java b/src/com/android/camera/settings/CameraSettingsActivity.java
index 479a127c2414319e20e97f734b967c570e6c6830..3dd2458ccb8b5c9bc90071a76cb18f0978dbfe7f 100644
--- a/src/com/android/camera/settings/CameraSettingsActivity.java
+++ b/src/com/android/camera/settings/CameraSettingsActivity.java
@@ -343,23 +343,23 @@ public class CameraSettingsActivity extends FragmentActivity {
             getPreferenceScreen().getSharedPreferences()
                     .unregisterOnSharedPreferenceChangeListener(this);
         }
 
         @Override
         public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
             setSummary(findPreference(key));
             if (key.equals(Keys.KEY_RECORD_LOCATION)
                     && sharedPreferences.getString(key, "0").equals("1")) {
                 Context context = this.getActivity().getApplicationContext();
-                if (context.checkSelfPermission(Manifest.permission.ACCESS_COARSE_LOCATION)
+                if (context.checkSelfPermission(Manifest.permission.ACCESS_FINE_LOCATION)
                         != PackageManager.PERMISSION_GRANTED) {
-                    requestPermissions(new String[] {Manifest.permission.ACCESS_COARSE_LOCATION},
+                    requestPermissions(new String[] {Manifest.permission.ACCESS_FINE_LOCATION},
                         PERMISSION_REQUEST_CODE);
                 }
             }
         }
 
         /**
          * Set the entries for the given preference. The given preference needs
          * to be a {@link ListPreference}
          */
         private void setEntries(Preference preference) {

commit 0507eb066805b76924238156dfbe0aee910f066d
Author: Daniel Micay <danielmicay@gmail.com>
Date:   Sat 2020-10-24 05:49:53-0400

    remove unused INTERNET permission
---
 AndroidManifest.xml | 1 -
 1 file changed, 1 deletion(-)

diff --git a/AndroidManifest.xml b/AndroidManifest.xml
index 45e69e8ef4f129193478517abb323d57f96e2bee..dd93825afd528328e419ff8c7c5876db73f24e44 100644
--- a/AndroidManifest.xml
+++ b/AndroidManifest.xml
@@ -7,21 +7,20 @@
     <uses-sdk
         android:minSdkVersion="19"
         android:targetSdkVersion="28" />
 
     <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
     <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
     <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
     <uses-permission android:name="android.permission.BIND_WALLPAPER" />
     <uses-permission android:name="android.permission.CAMERA" />
     <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
-    <uses-permission android:name="android.permission.INTERNET" />
     <uses-permission android:name="android.permission.NFC" />
     <uses-permission android:name="android.permission.READ_SYNC_SETTINGS" />
     <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
     <uses-permission android:name="android.permission.RECORD_AUDIO" />
     <uses-permission android:name="android.permission.SET_WALLPAPER" />
     <uses-permission android:name="android.permission.SUBSCRIBED_FEEDS_READ" />
     <uses-permission android:name="android.permission.SUBSCRIBED_FEEDS_WRITE" />
     <uses-permission android:name="android.permission.USE_CREDENTIALS" />
     <uses-permission android:name="android.permission.VIBRATE" />
     <uses-permission android:name="android.permission.WAKE_LOCK" />

commit 2a7c5bce3242ff7eb972e2f2ff5a7cf80230d09b (HEAD, tag: RQ1A.210105.002.2021.01.05.03, m/master)
Author: Daniel Micay <danielmicay@gmail.com>
Date:   Mon 2020-12-14 11:20:06-0500

    remove unused Wi-Fi state permissions
---
 AndroidManifest.xml | 2 --
 1 file changed, 2 deletions(-)

diff --git a/AndroidManifest.xml b/AndroidManifest.xml
index dd93825afd528328e419ff8c7c5876db73f24e44..e1b04f931b8852d232b7a897802e7866289348af 100644
--- a/AndroidManifest.xml
+++ b/AndroidManifest.xml
@@ -3,24 +3,22 @@
 <manifest
     xmlns:android="http://schemas.android.com/apk/res/android"
     package="com.android.camera2">
 
     <uses-sdk
         android:minSdkVersion="19"
         android:targetSdkVersion="28" />
 
     <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
     <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
-    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
     <uses-permission android:name="android.permission.BIND_WALLPAPER" />
     <uses-permission android:name="android.permission.CAMERA" />
-    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
     <uses-permission android:name="android.permission.NFC" />
     <uses-permission android:name="android.permission.READ_SYNC_SETTINGS" />
     <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
     <uses-permission android:name="android.permission.RECORD_AUDIO" />
     <uses-permission android:name="android.permission.SET_WALLPAPER" />
     <uses-permission android:name="android.permission.SUBSCRIBED_FEEDS_READ" />
     <uses-permission android:name="android.permission.SUBSCRIBED_FEEDS_WRITE" />
     <uses-permission android:name="android.permission.USE_CREDENTIALS" />
     <uses-permission android:name="android.permission.VIBRATE" />
     <uses-permission android:name="android.permission.WAKE_LOCK" />
